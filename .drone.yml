---
kind: pipeline
type: docker
name: "Create Release"

trigger:
  branch:
    - main

steps:
  - name: release-please
    image: docker.io/kameshsampath/drone-github-release-please:v0.0.2
    pull: if-not-exists
    settings:
      github_token:
        from_secret: extn_github_token
      extra_options: |
        release-type: simple
        bump-patch-for-minor-pre-major: true
    when:
      event:
        - push
---
kind: pipeline
type: docker
name: "Build and Release (arm64)"

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - tag
    - push

steps:
  # need to fetch the tags to be available in next steps
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags

  - name: Release Dev Binaries
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - goreleaser release --snapshot --rm-dist --debug
    when:
      event:
        - push
      branch:
        - main

  - name: Release GA Binaries
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - goreleaser release --rm-dist
    when:
      event:
        - tag

  - name: ui-build
    image: node:17.7-alpine3.14
    commands:
      - cd ui
      - npm ci
      - CI=false npm run build

  - name: Publish GA
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      dockerfile: docker/Dockerfile.linux.arm64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - tag

  - name: Publish Dev
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag_suffix: linux-arm64
      dockerfile: docker/Dockerfile.linux.arm64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - main
      event:
        - push
---
kind: pipeline
type: docker
name: "Build and Release (amd64)"

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - tag
    - push

steps:
  # need to fetch the tags to be available in next steps
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags

  - name: Release Dev Binaries
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - goreleaser release --snapshot --rm-dist --debug
    when:
      event:
        - push
      branch:
        - main

  - name: Release GA Binaries
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - goreleaser release --rm-dist
    when:
      event:
        - tag

  - name: ui-build
    image: node:17.7-alpine3.14
    commands:
      - cd ui
      - npm ci
      - CI=false npm run build

  - name: Publish GA
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      dockerfile: docker/Dockerfile.linux.amd64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - tag

  - name: Publish Dev
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      dockerfile: docker/Dockerfile.linux.amd64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - push
      branch:
        - main
---
kind: pipeline
type: docker
name: "Publish Manifest"

depends_on:
  - "Build and Release (arm64)"
  - "Build and Release (amd64)"

trigger:
  event:
    - tag
    - push

steps:
  - name: Publish GA Manifests
    image: plugins/manifest:1.2
    settings:
      auto_tag: true
      ignore_missing: true
      spec: docker/manifest.tmpl
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - tag
  - name: Publish Dev Manifests
    image: plugins/manifest:1.2
    settings:
      auto_tag: true
      ignore_missing: true
      spec: docker/manifest.tmpl
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - main
      event:
        - push
