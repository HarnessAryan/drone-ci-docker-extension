---
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: arm64

steps:
  # - name: goreleaser
  #   image: goreleaser/goreleaser
  #   pull: if-not-exists
  #   environment:
  #     CGO_ENABLED: "0"
  #     GITHUB_TOKEN:
  #       from_secret: github_token
  #   commands:
  #     - goreleaser release --snapshot --rm-dist --debug
  
  - name: ui-build
    image: node:17.7-alpine3.14
    commands:
      - cd ui
      - npm ci
      - CI=false npm run build

  - name: Publish Dev Build arm64
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      dockerfile: docker/Dockerfile.linux.arm64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: image_registry_username
      password:
        from_secret: image_registry_password

  - name: Publish Dev Build amd64
    image: plugins/docker
    pull: if-not-exists
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      dockerfile: docker/Dockerfile.linux.amd64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: image_registry_username
      password:
        from_secret: image_registry_password

  - name: Publish Dev Manifests
    image: plugins/manifest:1.2
    settings:
      tags:
       - latest
      ignore_missing: true
      spec: docker/manifest.local.tmpl
      username:
        from_secret: image_registry_username
      password:
        from_secret: image_registry_password
