---
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: arm64

steps:
  - name: goreleaser
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
    commands:
      - cd backend
      - goreleaser build --snapshot --rm-dist --debug

  - name: ui-build
    image: node:17.7-buster
    pull: if-not-exists
    environment:
      # this is required by Docker Extension to load
      # static files from extension path on the Host
      PUBLIC_URL: .
      BROWSER: none
    commands:
      - cd ui
      - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
      - pnpm install
      - pnpm build

  - name: Publish Dev Build arm64
    image: plugins/docker
    pull: if-not-exists
    settings:
      tags:
       - latest
      dry_run: true
      purge: false
      daemon_off: true
      dockerfile: docker/Dockerfile.linux.arm64
      registry: docker.io
      repo:
        from_secret: destination_image
      username:
        from_secret: image_registry_username
      password:
        from_secret: image_registry_password
    volumes:
    - name: dockersock
      path: /var/run/docker.sock

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: goreleaser
    image: goreleaser/goreleaser
    pull: if-not-exists
    environment:
      CGO_ENABLED: "0"
    commands:
      - goreleaser build --snapshot --rm-dist --debug

  - name: ui-build
    image: node:17.7-buster
    environment:
      CI: false
      # this is required by Docker Extension to load
      # static files from extension path on the Host
      PUBLIC_URL: .
      BROWSER: none
    commands:
      - cd ui
      - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
      - pnpm install
      - pnpm build
  - name: Publish Dev Build amd64
    image: plugins/docker
    pull: if-not-exists
    settings:
      dry_run: true
      purge: false
      daemon_off: true
      tags:
      - latest
      dockerfile: docker/Dockerfile.linux.amd64
      registry:
        from_secret: image_registry
      repo:
        from_secret: destination_image
      username:
        from_secret: image_registry_username
      password:
        from_secret: image_registry_password
    volumes:
    - name: dockersock
      path: /var/run/docker.sock

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
